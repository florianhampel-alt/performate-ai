# Performate AI - tmux Configuration
# Professional development environment setup

# ==============================================================================
# BASIC SETTINGS
# ==============================================================================
# Set default terminal
set -g default-terminal "screen-256color"

# Enable mouse support
set -g mouse on

# Set escape time to 0 for faster response
set -sg escape-time 0

# Start window and pane numbering from 1
set -g base-index 1
setw -g pane-base-index 1

# Automatically renumber windows when one is closed
set -g renumber-windows on

# ==============================================================================
# LOGGING CONFIGURATION
# ==============================================================================
# Enable logging for all panes automatically
set -g @plugin 'tmux-plugins/tmux-logging'

# Auto-start logging when pane is created
set -g @logging-path "$PWD/logs/tmux"
set -g @screen-capture-path "$PWD/logs/tmux"
set -g @save-complete-history-path "$PWD/logs/tmux"

# ==============================================================================
# PERFORMATE AI PROJECT LAYOUT
# ==============================================================================
# Create project-specific windows on session start
new-session -d -s performate-ai -c "$PWD"

# Window 1: Backend Development
new-window -t performate-ai:1 -n 'backend' -c "$PWD/backend"

# Window 2: Frontend Development  
new-window -t performate-ai:2 -n 'frontend' -c "$PWD/frontend"

# Window 3: Docker Services
new-window -t performate-ai:3 -n 'services' -c "$PWD"

# Window 4: Logs & Monitoring
new-window -t performate-ai:4 -n 'logs' -c "$PWD"

# Window 5: Terminal/Testing
new-window -t performate-ai:5 -n 'terminal' -c "$PWD"

# ==============================================================================
# PANE LAYOUT FOR EACH WINDOW
# ==============================================================================
# Backend window: Split for API and logs
select-window -t performate-ai:1
split-window -h -c "$PWD/backend"
select-pane -t 0

# Frontend window: Split for dev server and build
select-window -t performate-ai:2
split-window -h -c "$PWD/frontend" 
select-pane -t 0

# Services window: Docker compose and status
select-window -t performate-ai:3
split-window -v -c "$PWD"
split-window -h -c "$PWD"
select-layout even-horizontal
select-pane -t 0

# Logs window: Multiple log streams
select-window -t performate-ai:4
split-window -h -c "$PWD"
split-window -v -c "$PWD"
select-pane -t 0
split-window -v -c "$PWD"
select-layout tiled

# ==============================================================================
# KEY BINDINGS
# ==============================================================================
# Prefix key (Ctrl+A instead of Ctrl+B)
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Quick reload of this config file
bind r source-file ~/.tmux.conf \; display-message "Config reloaded!"

# Better pane splitting
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Quick pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# ==============================================================================
# STATUS BAR
# ==============================================================================
# Status bar colors
set -g status-bg black
set -g status-fg white

# Status bar content
set -g status-left-length 30
set -g status-left '#[fg=green]#H #[fg=blue]#S #[fg=yellow]#I:#P '

set -g status-right-length 60
set -g status-right '#[fg=yellow]%Y-%m-%d %H:%M #[fg=green]Performate-AI'

# Window status format
setw -g window-status-current-style 'fg=black,bg=green'
setw -g window-status-current-format ' #I:#W#F '

# ==============================================================================
# PLUGIN MANAGER
# ==============================================================================
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Auto-save and restore sessions
set -g @continuum-restore 'on'
set -g @continuum-save-interval '1'

# Initialize TMUX plugin manager (keep this line at the very bottom)
run '~/.tmux/plugins/tpm/tpm'